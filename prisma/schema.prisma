// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
	userId String @id @default(uuid())
	username String @unique
	passwordHash String
	email String @unique
	role UserRole @default(STUDENT)
	createdAt DateTime @default(now())

	// Relations
	ownedItems DriveItem[] @relation("ItemOwner")
	sharedWithMe SharePermission[] @relation("SharedWithUser")

	@@map("users")
}

model DriveItem {
	itemId String @id @default(uuid())
	ownerId String
	parentId String?
	name String
	itemType ItemType
	isTrashed Boolean @default(false)
	trashedAt DateTime?
	permission Permission @default(PRIVATE)
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt

	// Relations
	owner User @relation("ItemOwner", fields: [ownerId], references: [userId], onDelete: Restrict)
	parent DriveItem? @relation("FolderChildren", fields: [parentId], references: [itemId], onDelete: SetNull)
	children DriveItem[] @relation("FolderChildren")
	fileMetadata FileMetadata?
	sharePermissions SharePermission[]

	// Unique constraint: không trùng tên trong cùng thư mục của cùng owner
	@@unique([ownerId, parentId, name])
	@@map("drive_items")
}

model FileMetadata {
	itemId String @id
	mimeType String
	size BigInt
	storagePath String @unique
	documentType DocumentType?
	version Int @default(1)
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt

	// Relations
	driveItem DriveItem @relation(fields: [itemId], references: [itemId], onDelete: Cascade)

	@@map("file_metadata")
}

model SharePermission {
	shareId String @id @default(uuid())
	itemId String
	sharedWithUserId String
	permissionLevel ShareLevel
	createdAt DateTime @default(now())

	// Relations
	item DriveItem @relation(fields: [itemId], references: [itemId], onDelete: Cascade)
	sharedWithUser User @relation("SharedWithUser", fields: [sharedWithUserId], references: [userId], onDelete: Cascade)

	// Unique constraint: một item chỉ được chia sẻ 1 lần với 1 user
	@@unique([itemId, sharedWithUserId])
	@@map("share_permissions")
}

enum UserRole {
	ADMIN
	TEACHER
	STUDENT
}

enum ItemType {
	FILE
	FOLDER
}

enum Permission {
	PRIVATE
	SHARED
}

enum ShareLevel {
	VIEWER
	EDITOR
}

enum DocumentType {
	PDF
	WORD
	EXCEL
	POWERPOINT
	OTHER
}
